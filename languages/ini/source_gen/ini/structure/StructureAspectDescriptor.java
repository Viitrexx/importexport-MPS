package ini.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBaseContent = createDescriptorForBaseContent();
  /*package*/ final ConceptDescriptor myConceptComment = createDescriptorForComment();
  /*package*/ final ConceptDescriptor myConceptFile = createDescriptorForFile();
  /*package*/ final ConceptDescriptor myConceptKeyValue = createDescriptorForKeyValue();
  /*package*/ final ConceptDescriptor myConceptSectionHeader = createDescriptorForSectionHeader();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBaseContent, myConceptComment, myConceptFile, myConceptKeyValue, myConceptSectionHeader);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.BaseContent:
        return myConceptBaseContent;
      case LanguageConceptSwitch.Comment:
        return myConceptComment;
      case LanguageConceptSwitch.File:
        return myConceptFile;
      case LanguageConceptSwitch.KeyValue:
        return myConceptKeyValue;
      case LanguageConceptSwitch.SectionHeader:
        return myConceptSectionHeader;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForBaseContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ini", "BaseContent", 0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb52cccdL);
    b.class_(false, true, false);
    b.origin("r:1a6463e9-4df5-4cbf-b3a8-2f2695e76f62(ini.structure)/5222120623388675277");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ini", "Comment", 0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb52d090L);
    b.class_(false, false, false);
    // extends: ini.structure.BaseContent
    b.super_(0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb52cccdL);
    b.origin("r:1a6463e9-4df5-4cbf-b3a8-2f2695e76f62(ini.structure)/5222120623388676240");
    b.version(3);
    b.property("comment", 0x4878b309fb52d4a4L).type(PrimitiveTypeId.STRING).origin("5222120623388677284").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ini", "File", 0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb512301L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1a6463e9-4df5-4cbf-b3a8-2f2695e76f62(ini.structure)/5222120623388566273");
    b.version(3);
    b.aggregate("content", 0x4878b309fb52c886L).target(0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb52cccdL).optional(true).ordered(true).multiple(true).origin("5222120623388674182").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForKeyValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ini", "KeyValue", 0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb52e040L);
    b.class_(false, false, false);
    // extends: ini.structure.BaseContent
    b.super_(0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb52cccdL);
    b.origin("r:1a6463e9-4df5-4cbf-b3a8-2f2695e76f62(ini.structure)/5222120623388680256");
    b.version(3);
    b.property("key", 0x4878b309fb52e46cL).type(PrimitiveTypeId.STRING).origin("5222120623388681324").done();
    b.property("value", 0x4878b309fb52e4d6L).type(PrimitiveTypeId.STRING).origin("5222120623388681430").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSectionHeader() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ini", "SectionHeader", 0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb52d802L);
    b.class_(false, false, false);
    // extends: ini.structure.BaseContent
    b.super_(0x7f902c7db9de4f86L, 0x8d2e38710197ee79L, 0x4878b309fb52cccdL);
    b.origin("r:1a6463e9-4df5-4cbf-b3a8-2f2695e76f62(ini.structure)/5222120623388678146");
    b.version(3);
    b.property("header", 0x4878b309fb52de02L).type(PrimitiveTypeId.STRING).origin("5222120623388679682").done();
    return b.create();
  }
}
